// This file is generated using the build script - DO NOT EDIT MANUALLY!
{
    "version": "2.0.0",
    "command": "haxe",
    "suppressTaskName": true,
    "tasks": [
        {
            "taskName": "all",
            "args": [
                "--run",
                "Build",
                "-t",
                "all"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "test - TEST",
            "args": [
                "--run",
                "Build",
                "-t",
                "test",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            },
            "isTestCommand": true
        },
        {
            "taskName": "vshaxe",
            "args": [
                "--run",
                "Build",
                "-t",
                "vshaxe"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "client",
            "args": [
                "--run",
                "Build",
                "-t",
                "client"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "language-server",
            "args": [
                "--run",
                "Build",
                "-t",
                "language-server"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "language-server-tests",
            "args": [
                "--run",
                "Build",
                "-t",
                "language-server-tests",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "formatter",
            "args": [
                "--run",
                "Build",
                "-t",
                "formatter"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "formatter-cli",
            "args": [
                "--run",
                "Build",
                "-t",
                "formatter-cli"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "formatter-tests",
            "args": [
                "--run",
                "Build",
                "-t",
                "formatter-tests",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "tm-language",
            "args": [
                "--run",
                "Build",
                "-t",
                "tm-language",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "tm-language-conversion",
            "args": [
                "--run",
                "Build",
                "-t",
                "tm-language-conversion",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "tm-language-tests",
            "args": [
                "--run",
                "Build",
                "-t",
                "tm-language-tests",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "tm-language-build-tests",
            "args": [
                "--run",
                "Build",
                "-t",
                "tm-language-build-tests",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "all (debug)",
            "args": [
                "--run",
                "Build",
                "-t",
                "all",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "vshaxe (debug) - BUILD",
            "args": [
                "--run",
                "Build",
                "-t",
                "vshaxe",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            },
            "isBuildCommand": true
        },
        {
            "taskName": "client (debug)",
            "args": [
                "--run",
                "Build",
                "-t",
                "client",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "language-server (debug)",
            "args": [
                "--run",
                "Build",
                "-t",
                "language-server",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "formatter (debug)",
            "args": [
                "--run",
                "Build",
                "-t",
                "formatter",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "formatter-cli (debug)",
            "args": [
                "--run",
                "Build",
                "-t",
                "formatter-cli",
                "--debug"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "{install-all}",
            "args": [
                "--run",
                "Build",
                "--mode",
                "install",
                "--target",
                "all"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "{generate-complete-hxml}",
            "args": [
                "--run",
                "Build",
                "--display",
                "--target",
                "all"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        },
        {
            "taskName": "{generate-vscode-tasks}",
            "args": [
                "--run",
                "Build",
                "--gen-tasks",
                "--target",
                "all"
            ],
            "problemMatcher": {
                "owner": "haxe",
                "pattern": {
                    "regexp": "^(.+):(\\d+): (?:lines \\d+-(\\d+)|character(?:s (\\d+)-| )(\\d+)) : (?:(Warning) : )?(.*)$",
                    "file": 1,
                    "line": 2,
                    "endLine": 3,
                    "column": 4,
                    "endColumn": 5,
                    "severity": 6,
                    "message": 7
                }
            }
        }
    ]
}